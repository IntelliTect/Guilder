@page "/"
@using Guilder.Shared;
@using NodaTime;
@inject MeetingClient MeetingClient
@inject IClock Clock

<PageTitle>@_room.Name</PageTitle>

<CurrentMeeting Meeting="_currentMeeting"></CurrentMeeting>
@*<Timeline Meetings="_meetings"></Timeline>*@


@code {
    private Room _room = new Room("3a02a800-1e8a-49ef-82f6-be60e1147fdd", "HumperdinksCastle", "hi@intellitect.com");

    private IEnumerable<Meeting> _meetings = new List<Meeting>();

    private Meeting? _currentMeeting;

    protected override async Task OnInitializedAsync()
    {
        _meetings = await MeetingClient.GetFreeBusyForRoomId("3a02a800-1e8a-49ef-82f6-be60e1147fdd", new DateOnly(2023, 03, 03));

        var now = Clock.GetCurrentInstant();
        Console.WriteLine($"Now is {now}");
        Console.WriteLine($"First meeting {_meetings.FirstOrDefault()?.StartTimeInclusive} to {_meetings.FirstOrDefault()?.EndTimeExclusive}");

        _currentMeeting = _meetings.FirstOrDefault(x => x.StartTimeInclusive <= now && x.EndTimeExclusive > now);
    }
}
